{
  "contractName": "OurContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "_burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "_safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc",
          "type": "address"
        }
      ],
      "name": "setERC721ad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "registerBreeder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_age",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "cool",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_gender",
          "type": "bool"
        }
      ],
      "name": "declareAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "under_water_time",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "friendly",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "gender",
              "type": "bool"
            }
          ],
          "internalType": "struct OurContract.waterdoggos",
          "name": "doggo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "deadAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"under_water_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"friendly\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gender\",\"type\":\"bool\"}],\"internalType\":\"struct OurContract.waterdoggos\",\"name\":\"doggo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"deadAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"cool\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_gender\",\"type\":\"bool\"}],\"name\":\"declareAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"registerBreeder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc\",\"type\":\"address\"}],\"name\":\"setERC721ad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_burn(uint256)\":{\"details\":\"Internal function to burn a specific token. Reverts if the token does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token being burned\"}},\"_safeMint(address,uint256)\":{\"details\":\"Internal function to safely mint a new token. Reverts if the given token ID already exists. If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.\",\"params\":{\"to\":\"The address that will own the minted token\",\"tokenId\":\"uint256 ID of the token to be minted\"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/OurContract.sol\":\"OurContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Address.sol\":{\"keccak256\":\"0x0dda04d1cbd7c09e7187c8d5c30074cc32f17e247adb84034c0b3e40dd96c74f\",\"urls\":[\"bzz-raw://2f06fa27e220da3d4e949b69ffc6225091ec031ad64cd5f9e9ea7c66c54304ae\",\"dweb:/ipfs/QmYBiLxdMBbhevWsGLLLSjpV92FqDVv5tB2LwiQsgwvLQz\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Counters.sol\":{\"keccak256\":\"0xc3f0155278664e350913f1bdb65924d3d4e0d2271f28e3712f6cc360a021dc0f\",\"urls\":[\"bzz-raw://333152acda97e693450f1e70ee27ad290ec7051ba1c006ce7d29db7b3c3ca102\",\"dweb:/ipfs/QmarbB5y7QQPXgLsGW2PxsLTUpYYfkYycVU5fWa7aT2PPw\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC721.sol\":{\"keccak256\":\"0x6449885660ccb7297e27b1154bbff92bbc7d6e64b903bc1b7432ad61dfbf6b97\",\"urls\":[\"bzz-raw://e1099899c27bfdb7c21cd92c36cb2b3470a73bf2809e38497acbabf7cde88dc4\",\"dweb:/ipfs/QmfEm6tkMwdByPDEDv6gNakKpZgHdTMV2mfM3anTxjwvmT\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721.sol\":{\"keccak256\":\"0xd6a42a26c4d1a20f4ae1606ead8faf35900feeb047ce86d2f66da67f2bf6f4d8\",\"urls\":[\"bzz-raw://bb682d2ae60706888f7bfc802e7e4746d3a3bcb33feedbf8acdcdc18afbafa45\",\"dweb:/ipfs/Qmb17s15pvQaJ7djE7wVWcT2HPNE2rtQHKTkBgSiLhg8oQ\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x6c5dc28184efce2c2905fc26c15a9bdc88b42bdf87e7ac6c6b2e6bb4daf208a1\",\"urls\":[\"bzz-raw://2e717836e5077c1696e3382c59faedc1285eaff8f96f5f9a193cacf4bec5cc0e\",\"dweb:/ipfs/QmXFTsz1baZKjCtVAV1JuyJAQqzQ5wGoLnVNUkATR8uR9v\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/OurContract.sol\":{\"keccak256\":\"0xf515ab1c28b81cc4b7bc741d9917361ead95ab22601e7ec09b5b9457901e12dc\",\"urls\":[\"bzz-raw://072d4371034852b93a7efff6a5131b83ecedd4eabc11dc8dd1506f430814a8e6\",\"dweb:/ipfs/QmVAF3YCXKgaWUwDGNFDTCVKy6nC9qux8pAjpfnRHbJugw\"]},\"/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/SafeMath.sol\":{\"keccak256\":\"0xa054d1225878b2ac0f53f97b02fd1c86a6ab2451b02048e7fe12fe638c7ad4fd\",\"urls\":[\"bzz-raw://bb3a75a6e0017cd1d57bef1ec3c79d2b9248c84bc318255af49b921f0e2ad461\",\"dweb:/ipfs/QmWgsyRH6TjA7CyLM41pgHWZneWb4zbXxc6sZkWNV9Rz1Y\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002a6301ffc9a760e01b6200008960201b60201c565b620000426380ac58cd60e01b6200008960201b60201c565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001d6565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620000f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ec90620001a3565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000170601c83620001c5565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620001be8162000161565b9050919050565b600082825260208201905092915050565b612bbe80620001e66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639b1f9e7411610097578063b88d4fde11610066578063b88d4fde146102a5578063ceb97d52146102c1578063d3f16654146102dd578063e985e9c5146102f957610100565b80639b1f9e74146102355780639d90305914610251578063a22cb4651461026d578063b3e1c7181461028957610100565b806342842e0e116100d357806342842e0e1461019d5780636352211e146101b957806370a08231146101e95780638e9c6ce41461021957610100565b806301ffc9a714610105578063081812fc14610135578063095ea7b31461016557806323b872dd14610181575b600080fd5b61011f600480360361011a9190810190612024565b610329565b60405161012c9190612747565b60405180910390f35b61014f600480360361014a9190810190612076565b610390565b60405161015c91906126b7565b60405180910390f35b61017f600480360361017a9190810190611f47565b610415565b005b61019b60048036036101969190810190611dda565b61052d565b005b6101b760048036036101b29190810190611dda565b61058d565b005b6101d360048036036101ce9190810190612076565b6105ad565b6040516101e091906126b7565b60405180910390f35b61020360048036036101fe9190810190611d4c565b61065f565b6040516102109190612944565b60405180910390f35b610233600480360361022e9190810190611f83565b61071e565b005b61024f600480360361024a9190810190612076565b6108c7565b005b61026b60048036036102669190810190611d4c565b6108dc565b005b61028760048036036102829190810190611ea4565b61097a565b005b6102a3600480360361029e9190810190611f47565b610afb565b005b6102bf60048036036102ba9190810190611e29565b610b19565b005b6102db60048036036102d69190810190611f47565b610b7b565b005b6102f760048036036102f29190810190611ee0565b610d6c565b005b610313600480360361030e9190810190611d9e565b610e47565b6040516103209190612747565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061039b82610edb565b6103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d1906128a4565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610420826105ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610491576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610488906128e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104b0610f4d565b73ffffffffffffffffffffffffffffffffffffffff1614806104df57506104de816104d9610f4d565b610e47565b5b61051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590612824565b60405180910390fd5b6105288383610f55565b505050565b61053e610538610f4d565b8261100e565b61057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490612904565b60405180910390fd5b6105888383836110ec565b505050565b6105a883838360405180602001604052806000815250610b19565b505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90612864565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612844565b60405180910390fd5b610717600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611328565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077857600080fd5b610780611a5a565b6040518060a001604052808781526020018681526020018581526020018415158152602001831515815250905060011515600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461080a57600080fd5b80600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610870929190611a8d565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555090505050505050505050565b6108d96108d3826105ad565b82611336565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093657600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610982610f4d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e7906127e4565b60405180910390fd5b80600460006109fd610f4d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610aaa610f4d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610aef9190612747565b60405180910390a35050565b610b158282604051806020016040528060008152506114bd565b5050565b610b2a610b24610f4d565b8361100e565b610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6090612904565b60405180910390fd5b610b7584848484611518565b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bd557600080fd5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c889190612944565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cd89190810190611d75565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3e1c71883836040518363ffffffff1660e01b8152600401610d3692919061271e565b600060405180830381600087803b158015610d5057600080fd5b505af1158015610d64573d6000803e3d6000fd5b505050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da457600080fd5b600f826000015111610db557600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1f9e74826040518263ffffffff1660e01b8152600401610e109190612944565b600060405180830381600087803b158015610e2a57600080fd5b505af1158015610e3e573d6000803e3d6000fd5b50505050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610fc8836105ad565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061101982610edb565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612804565b60405180910390fd5b6000611063836105ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806110d257508373ffffffffffffffffffffffffffffffffffffffff166110ba84610390565b73ffffffffffffffffffffffffffffffffffffffff16145b806110e357506110e28185610e47565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661110c826105ad565b73ffffffffffffffffffffffffffffffffffffffff1614611162576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611159906128c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c9906127c4565b60405180910390fd5b6111dd838383611574565b6111e8600082610f55565b61122f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611579565b611276600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061159c565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b8173ffffffffffffffffffffffffffffffffffffffff16611356826105ad565b73ffffffffffffffffffffffffffffffffffffffff16146113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a390612924565b60405180910390fd5b6113b882600083611574565b6113c3600082610f55565b61140a600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611579565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6114c783836115b2565b6114d46000848484611770565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a90612784565b60405180910390fd5b505050565b6115238484846110ec565b61152f84848484611770565b61156e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156590612784565b60405180910390fd5b50505050565b505050565b6115916001826000015461196a90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161990612884565b60405180910390fd5b61162b81610edb565b1561166b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611662906127a4565b60405180910390fd5b61167760008383611574565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611710600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061159c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006117918473ffffffffffffffffffffffffffffffffffffffff166119b4565b61179e5760019050611962565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6117e2610f4d565b8988886040516024016117f894939291906126d2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161186291906126a0565b6000604051808303816000865af19150503d806000811461189f576040519150601f19603f3d011682016040523d82523d6000602084013e6118a4565b606091505b5091509150816118fc576000815111156118c15780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f390612784565b60405180910390fd5b600081806020019051611912919081019061204d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b60006119ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119ff565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156119f657506000801b8214155b92505050919050565b6000838311158290611a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3e9190612762565b60405180910390fd5b5060008385039050809150509392505050565b6040518060a001604052806000815260200160608152602001600081526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ace57805160ff1916838001178555611afc565b82800160010185558215611afc579182015b82811115611afb578251825591602001919060010190611ae0565b5b509050611b099190611b0d565b5090565b611b2f91905b80821115611b2b576000816000905550600101611b13565b5090565b90565b600081359050611b4181612b2c565b92915050565b600081519050611b5681612b2c565b92915050565b600081359050611b6b81612b43565b92915050565b600081359050611b8081612b5a565b92915050565b600081519050611b9581612b5a565b92915050565b600082601f830112611bac57600080fd5b8135611bbf611bba8261298c565b61295f565b91508082526020830160208301858383011115611bdb57600080fd5b611be6838284612ad9565b50505092915050565b600082601f830112611c0057600080fd5b8135611c13611c0e826129b8565b61295f565b91508082526020830160208301858383011115611c2f57600080fd5b611c3a838284612ad9565b50505092915050565b600082601f830112611c5457600080fd5b8135611c67611c62826129e4565b61295f565b91508082526020830160208301858383011115611c8357600080fd5b611c8e838284612ad9565b50505092915050565b600060a08284031215611ca957600080fd5b611cb360a061295f565b90506000611cc384828501611d37565b600083015250602082013567ffffffffffffffff811115611ce357600080fd5b611cef84828501611bef565b6020830152506040611d0384828501611d37565b6040830152506060611d1784828501611b5c565b6060830152506080611d2b84828501611b5c565b60808301525092915050565b600081359050611d4681612b71565b92915050565b600060208284031215611d5e57600080fd5b6000611d6c84828501611b32565b91505092915050565b600060208284031215611d8757600080fd5b6000611d9584828501611b47565b91505092915050565b60008060408385031215611db157600080fd5b6000611dbf85828601611b32565b9250506020611dd085828601611b32565b9150509250929050565b600080600060608486031215611def57600080fd5b6000611dfd86828701611b32565b9350506020611e0e86828701611b32565b9250506040611e1f86828701611d37565b9150509250925092565b60008060008060808587031215611e3f57600080fd5b6000611e4d87828801611b32565b9450506020611e5e87828801611b32565b9350506040611e6f87828801611d37565b925050606085013567ffffffffffffffff811115611e8c57600080fd5b611e9887828801611b9b565b91505092959194509250565b60008060408385031215611eb757600080fd5b6000611ec585828601611b32565b9250506020611ed685828601611b5c565b9150509250929050565b600080600060608486031215611ef557600080fd5b6000611f0386828701611b32565b935050602084013567ffffffffffffffff811115611f2057600080fd5b611f2c86828701611c97565b9250506040611f3d86828701611d37565b9150509250925092565b60008060408385031215611f5a57600080fd5b6000611f6885828601611b32565b9250506020611f7985828601611d37565b9150509250929050565b60008060008060008060c08789031215611f9c57600080fd5b6000611faa89828a01611b32565b9650506020611fbb89828a01611d37565b955050604087013567ffffffffffffffff811115611fd857600080fd5b611fe489828a01611c43565b9450506060611ff589828a01611d37565b935050608061200689828a01611b5c565b92505060a061201789828a01611b5c565b9150509295509295509295565b60006020828403121561203657600080fd5b600061204484828501611b71565b91505092915050565b60006020828403121561205f57600080fd5b600061206d84828501611b86565b91505092915050565b60006020828403121561208857600080fd5b600061209684828501611d37565b91505092915050565b6120a881612a65565b82525050565b6120b781612a53565b82525050565b6120c681612a77565b82525050565b60006120d782612a10565b6120e18185612a26565b93506120f1818560208601612ae8565b6120fa81612b1b565b840191505092915050565b600061211082612a10565b61211a8185612a37565b935061212a818560208601612ae8565b80840191505092915050565b600061214182612a1b565b61214b8185612a42565b935061215b818560208601612ae8565b61216481612b1b565b840191505092915050565b600061217c603283612a42565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006121e2601c83612a42565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612222602483612a42565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612288601983612a42565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006122c8602c83612a42565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061232e603883612a42565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612394602a83612a42565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fa602983612a42565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612460602083612a42565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006124a0602c83612a42565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612506602983612a42565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061256c602183612a42565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125d2603183612a42565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612638602583612a42565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61269a81612acf565b82525050565b60006126ac8284612105565b915081905092915050565b60006020820190506126cc60008301846120ae565b92915050565b60006080820190506126e7600083018761209f565b6126f460208301866120ae565b6127016040830185612691565b818103606083015261271381846120cc565b905095945050505050565b600060408201905061273360008301856120ae565b6127406020830184612691565b9392505050565b600060208201905061275c60008301846120bd565b92915050565b6000602082019050818103600083015261277c8184612136565b905092915050565b6000602082019050818103600083015261279d8161216f565b9050919050565b600060208201905081810360008301526127bd816121d5565b9050919050565b600060208201905081810360008301526127dd81612215565b9050919050565b600060208201905081810360008301526127fd8161227b565b9050919050565b6000602082019050818103600083015261281d816122bb565b9050919050565b6000602082019050818103600083015261283d81612321565b9050919050565b6000602082019050818103600083015261285d81612387565b9050919050565b6000602082019050818103600083015261287d816123ed565b9050919050565b6000602082019050818103600083015261289d81612453565b9050919050565b600060208201905081810360008301526128bd81612493565b9050919050565b600060208201905081810360008301526128dd816124f9565b9050919050565b600060208201905081810360008301526128fd8161255f565b9050919050565b6000602082019050818103600083015261291d816125c5565b9050919050565b6000602082019050818103600083015261293d8161262b565b9050919050565b60006020820190506129596000830184612691565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561298257600080fd5b8060405250919050565b600067ffffffffffffffff8211156129a357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156129cf57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156129fb57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612a5e82612aaf565b9050919050565b6000612a7082612aaf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612b06578082015181840152602081019050612aeb565b83811115612b15576000848401525b50505050565b6000601f19601f8301169050919050565b612b3581612a53565b8114612b4057600080fd5b50565b612b4c81612a77565b8114612b5757600080fd5b50565b612b6381612a83565b8114612b6e57600080fd5b50565b612b7a81612acf565b8114612b8557600080fd5b5056fea2646970667358221220071164aedea5717dc1f4003050da1c3ed0748e57f8b219c5278d3afe4473eed664736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639b1f9e7411610097578063b88d4fde11610066578063b88d4fde146102a5578063ceb97d52146102c1578063d3f16654146102dd578063e985e9c5146102f957610100565b80639b1f9e74146102355780639d90305914610251578063a22cb4651461026d578063b3e1c7181461028957610100565b806342842e0e116100d357806342842e0e1461019d5780636352211e146101b957806370a08231146101e95780638e9c6ce41461021957610100565b806301ffc9a714610105578063081812fc14610135578063095ea7b31461016557806323b872dd14610181575b600080fd5b61011f600480360361011a9190810190612024565b610329565b60405161012c9190612747565b60405180910390f35b61014f600480360361014a9190810190612076565b610390565b60405161015c91906126b7565b60405180910390f35b61017f600480360361017a9190810190611f47565b610415565b005b61019b60048036036101969190810190611dda565b61052d565b005b6101b760048036036101b29190810190611dda565b61058d565b005b6101d360048036036101ce9190810190612076565b6105ad565b6040516101e091906126b7565b60405180910390f35b61020360048036036101fe9190810190611d4c565b61065f565b6040516102109190612944565b60405180910390f35b610233600480360361022e9190810190611f83565b61071e565b005b61024f600480360361024a9190810190612076565b6108c7565b005b61026b60048036036102669190810190611d4c565b6108dc565b005b61028760048036036102829190810190611ea4565b61097a565b005b6102a3600480360361029e9190810190611f47565b610afb565b005b6102bf60048036036102ba9190810190611e29565b610b19565b005b6102db60048036036102d69190810190611f47565b610b7b565b005b6102f760048036036102f29190810190611ee0565b610d6c565b005b610313600480360361030e9190810190611d9e565b610e47565b6040516103209190612747565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061039b82610edb565b6103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d1906128a4565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610420826105ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610491576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610488906128e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104b0610f4d565b73ffffffffffffffffffffffffffffffffffffffff1614806104df57506104de816104d9610f4d565b610e47565b5b61051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590612824565b60405180910390fd5b6105288383610f55565b505050565b61053e610538610f4d565b8261100e565b61057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490612904565b60405180910390fd5b6105888383836110ec565b505050565b6105a883838360405180602001604052806000815250610b19565b505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90612864565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612844565b60405180910390fd5b610717600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611328565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077857600080fd5b610780611a5a565b6040518060a001604052808781526020018681526020018581526020018415158152602001831515815250905060011515600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461080a57600080fd5b80600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190610870929190611a8d565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555090505050505050505050565b6108d96108d3826105ad565b82611336565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093657600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610982610f4d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e7906127e4565b60405180910390fd5b80600460006109fd610f4d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610aaa610f4d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610aef9190612747565b60405180910390a35050565b610b158282604051806020016040528060008152506114bd565b5050565b610b2a610b24610f4d565b8361100e565b610b69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6090612904565b60405180910390fd5b610b7584848484611518565b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bd557600080fd5b6001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b8152600401610c889190612944565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cd89190810190611d75565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b3e1c71883836040518363ffffffff1660e01b8152600401610d3692919061271e565b600060405180830381600087803b158015610d5057600080fd5b505af1158015610d64573d6000803e3d6000fd5b505050505050565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610da457600080fd5b600f826000015111610db557600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1f9e74826040518263ffffffff1660e01b8152600401610e109190612944565b600060405180830381600087803b158015610e2a57600080fd5b505af1158015610e3e573d6000803e3d6000fd5b50505050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610fc8836105ad565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061101982610edb565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612804565b60405180910390fd5b6000611063836105ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806110d257508373ffffffffffffffffffffffffffffffffffffffff166110ba84610390565b73ffffffffffffffffffffffffffffffffffffffff16145b806110e357506110e28185610e47565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661110c826105ad565b73ffffffffffffffffffffffffffffffffffffffff1614611162576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611159906128c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c9906127c4565b60405180910390fd5b6111dd838383611574565b6111e8600082610f55565b61122f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611579565b611276600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061159c565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600081600001549050919050565b8173ffffffffffffffffffffffffffffffffffffffff16611356826105ad565b73ffffffffffffffffffffffffffffffffffffffff16146113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a390612924565b60405180910390fd5b6113b882600083611574565b6113c3600082610f55565b61140a600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611579565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6114c783836115b2565b6114d46000848484611770565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a90612784565b60405180910390fd5b505050565b6115238484846110ec565b61152f84848484611770565b61156e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156590612784565b60405180910390fd5b50505050565b505050565b6115916001826000015461196a90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161990612884565b60405180910390fd5b61162b81610edb565b1561166b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611662906127a4565b60405180910390fd5b61167760008383611574565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611710600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061159c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006117918473ffffffffffffffffffffffffffffffffffffffff166119b4565b61179e5760019050611962565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6117e2610f4d565b8988886040516024016117f894939291906126d2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161186291906126a0565b6000604051808303816000865af19150503d806000811461189f576040519150601f19603f3d011682016040523d82523d6000602084013e6118a4565b606091505b5091509150816118fc576000815111156118c15780518082602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f390612784565b60405180910390fd5b600081806020019051611912919081019061204d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b60006119ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119ff565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156119f657506000801b8214155b92505050919050565b6000838311158290611a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3e9190612762565b60405180910390fd5b5060008385039050809150509392505050565b6040518060a001604052806000815260200160608152602001600081526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ace57805160ff1916838001178555611afc565b82800160010185558215611afc579182015b82811115611afb578251825591602001919060010190611ae0565b5b509050611b099190611b0d565b5090565b611b2f91905b80821115611b2b576000816000905550600101611b13565b5090565b90565b600081359050611b4181612b2c565b92915050565b600081519050611b5681612b2c565b92915050565b600081359050611b6b81612b43565b92915050565b600081359050611b8081612b5a565b92915050565b600081519050611b9581612b5a565b92915050565b600082601f830112611bac57600080fd5b8135611bbf611bba8261298c565b61295f565b91508082526020830160208301858383011115611bdb57600080fd5b611be6838284612ad9565b50505092915050565b600082601f830112611c0057600080fd5b8135611c13611c0e826129b8565b61295f565b91508082526020830160208301858383011115611c2f57600080fd5b611c3a838284612ad9565b50505092915050565b600082601f830112611c5457600080fd5b8135611c67611c62826129e4565b61295f565b91508082526020830160208301858383011115611c8357600080fd5b611c8e838284612ad9565b50505092915050565b600060a08284031215611ca957600080fd5b611cb360a061295f565b90506000611cc384828501611d37565b600083015250602082013567ffffffffffffffff811115611ce357600080fd5b611cef84828501611bef565b6020830152506040611d0384828501611d37565b6040830152506060611d1784828501611b5c565b6060830152506080611d2b84828501611b5c565b60808301525092915050565b600081359050611d4681612b71565b92915050565b600060208284031215611d5e57600080fd5b6000611d6c84828501611b32565b91505092915050565b600060208284031215611d8757600080fd5b6000611d9584828501611b47565b91505092915050565b60008060408385031215611db157600080fd5b6000611dbf85828601611b32565b9250506020611dd085828601611b32565b9150509250929050565b600080600060608486031215611def57600080fd5b6000611dfd86828701611b32565b9350506020611e0e86828701611b32565b9250506040611e1f86828701611d37565b9150509250925092565b60008060008060808587031215611e3f57600080fd5b6000611e4d87828801611b32565b9450506020611e5e87828801611b32565b9350506040611e6f87828801611d37565b925050606085013567ffffffffffffffff811115611e8c57600080fd5b611e9887828801611b9b565b91505092959194509250565b60008060408385031215611eb757600080fd5b6000611ec585828601611b32565b9250506020611ed685828601611b5c565b9150509250929050565b600080600060608486031215611ef557600080fd5b6000611f0386828701611b32565b935050602084013567ffffffffffffffff811115611f2057600080fd5b611f2c86828701611c97565b9250506040611f3d86828701611d37565b9150509250925092565b60008060408385031215611f5a57600080fd5b6000611f6885828601611b32565b9250506020611f7985828601611d37565b9150509250929050565b60008060008060008060c08789031215611f9c57600080fd5b6000611faa89828a01611b32565b9650506020611fbb89828a01611d37565b955050604087013567ffffffffffffffff811115611fd857600080fd5b611fe489828a01611c43565b9450506060611ff589828a01611d37565b935050608061200689828a01611b5c565b92505060a061201789828a01611b5c565b9150509295509295509295565b60006020828403121561203657600080fd5b600061204484828501611b71565b91505092915050565b60006020828403121561205f57600080fd5b600061206d84828501611b86565b91505092915050565b60006020828403121561208857600080fd5b600061209684828501611d37565b91505092915050565b6120a881612a65565b82525050565b6120b781612a53565b82525050565b6120c681612a77565b82525050565b60006120d782612a10565b6120e18185612a26565b93506120f1818560208601612ae8565b6120fa81612b1b565b840191505092915050565b600061211082612a10565b61211a8185612a37565b935061212a818560208601612ae8565b80840191505092915050565b600061214182612a1b565b61214b8185612a42565b935061215b818560208601612ae8565b61216481612b1b565b840191505092915050565b600061217c603283612a42565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006121e2601c83612a42565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612222602483612a42565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612288601983612a42565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006122c8602c83612a42565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061232e603883612a42565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612394602a83612a42565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fa602983612a42565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612460602083612a42565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006124a0602c83612a42565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612506602983612a42565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061256c602183612a42565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125d2603183612a42565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612638602583612a42565b91507f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f60008301527f74206f776e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61269a81612acf565b82525050565b60006126ac8284612105565b915081905092915050565b60006020820190506126cc60008301846120ae565b92915050565b60006080820190506126e7600083018761209f565b6126f460208301866120ae565b6127016040830185612691565b818103606083015261271381846120cc565b905095945050505050565b600060408201905061273360008301856120ae565b6127406020830184612691565b9392505050565b600060208201905061275c60008301846120bd565b92915050565b6000602082019050818103600083015261277c8184612136565b905092915050565b6000602082019050818103600083015261279d8161216f565b9050919050565b600060208201905081810360008301526127bd816121d5565b9050919050565b600060208201905081810360008301526127dd81612215565b9050919050565b600060208201905081810360008301526127fd8161227b565b9050919050565b6000602082019050818103600083015261281d816122bb565b9050919050565b6000602082019050818103600083015261283d81612321565b9050919050565b6000602082019050818103600083015261285d81612387565b9050919050565b6000602082019050818103600083015261287d816123ed565b9050919050565b6000602082019050818103600083015261289d81612453565b9050919050565b600060208201905081810360008301526128bd81612493565b9050919050565b600060208201905081810360008301526128dd816124f9565b9050919050565b600060208201905081810360008301526128fd8161255f565b9050919050565b6000602082019050818103600083015261291d816125c5565b9050919050565b6000602082019050818103600083015261293d8161262b565b9050919050565b60006020820190506129596000830184612691565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561298257600080fd5b8060405250919050565b600067ffffffffffffffff8211156129a357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156129cf57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156129fb57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612a5e82612aaf565b9050919050565b6000612a7082612aaf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612b06578082015181840152602081019050612aeb565b83811115612b15576000848401525b50505050565b6000601f19601f8301169050919050565b612b3581612a53565b8114612b4057600080fd5b50565b612b4c81612a77565b8114612b5757600080fd5b50565b612b6381612a83565b8114612b6e57600080fd5b50565b612b7a81612acf565b8114612b8557600080fd5b5056fea2646970667358221220071164aedea5717dc1f4003050da1c3ed0748e57f8b219c5278d3afe4473eed664736f6c63430006000033",
  "sourceMap": "268:1701:9:-:0;;;648:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;648:61:9;718:40:3;385:10;737:20;;718:18;;;:40;;:::i;:::-;2206::4;2080:10;2225:20;;2206:18;;;:40;;:::i;:::-;691:10:9;681:7;;:20;;;;;;;;;;;;;;;;;;268:1701;;1451:198:3;1549:10;1534:25;;:11;:25;;;;;1526:66;;;;;;;;;;;;;;;;;;;;;;1638:4;1602:20;:33;1623:11;1602:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1451:198;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:407;;533:2;522:9;518:18;510:26;;583:9;577:4;573:20;569:1;558:9;554:17;547:47;608:131;734:4;608:131;;;600:139;;504:245;;;;757:163;;872:6;867:3;860:19;909:4;904:3;900:14;885:29;;853:67;;;;;268:1701:9;;;;;;;",
  "deployedSourceMap": "268:1701:9:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:1701:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:142:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4211:209:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3545:381;;;;;;;;;;;;;;;;:::i;:::-;;5922:304;;;;;;;;;;;;;;;;:::i;:::-;;6875:149;;;;;;;;;;;;;;;;:::i;:::-;;2892:232;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2457:216;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1203:510:9;;;;;;;;;;;;;;;;:::i;:::-;;13044:96:4;;;;;;;;;;;;;;;;:::i;:::-;;715:120:9;;;;;;;;;;;;;;;;:::i;:::-;;4719:290:4;;;;;;;;;;;;;;;;:::i;:::-;;10581:106;;;;;;;;;;;;;;;;:::i;:::-;;7747:286;;;;;;;;;;;;;;;;:::i;:::-;;910:248:9;;;;;;;;;;;;;;;;:::i;:::-;;1755:209;;;;;;;;;;;;;;;;:::i;:::-;;5331:154:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;915:142:3;994:4;1017:20;:33;1038:11;1017:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:40;;915:142;;;:::o;4211:209:4:-;4279:7;4306:16;4314:7;4306;:16::i;:::-;4298:73;;;;;;;;;;;;;;;;;;;;;;4389:15;:24;4405:7;4389:24;;;;;;;;;;;;;;;;;;;;;4382:31;;4211:209;;;:::o;3545:381::-;3625:13;3641:16;3649:7;3641;:16::i;:::-;3625:32;;3681:5;3675:11;;:2;:11;;;;3667:57;;;;;;;;;;;;;;;;;;;;;;3759:5;3743:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3768:37;3785:5;3792:12;:10;:12::i;:::-;3768:16;:37::i;:::-;3743:62;3735:152;;;;;;;;;;;;;;;;;;;;;;3898:21;3907:2;3911:7;3898:8;:21::i;:::-;3545:381;;;:::o;5922:304::-;6081:41;6100:12;:10;:12::i;:::-;6114:7;6081:18;:41::i;:::-;6073:103;;;;;;;;;;;;;;;;;;;;;;6187:32;6201:4;6207:2;6211:7;6187:13;:32::i;:::-;5922:304;;;:::o;6875:149::-;6978:39;6995:4;7001:2;7005:7;6978:39;;;;;;;;;;;;:16;:39::i;:::-;6875:149;;;:::o;2892:232::-;2956:7;2975:13;2991:11;:20;3003:7;2991:20;;;;;;;;;;;;;;;;;;;;;2975:36;;3046:1;3029:19;;:5;:19;;;;3021:73;;;;;;;;;;;;;;;;;;;;;;3112:5;3105:12;;;2892:232;;;:::o;2457:216::-;2521:7;2565:1;2548:19;;:5;:19;;;;2540:74;;;;;;;;;;;;;;;;;;;;;;2632:34;:17;:24;2650:5;2632:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2625:41;;2457:216;;;:::o;1203:510:9:-;1344:10;1335:19;;:7;;;;;;;;;;;:19;;;1327:28;;;;;;1408;;:::i;:::-;1439:186;;;;;;;;1472:4;1439:186;;;;1498:5;1439:186;;;;1537:5;1439:186;;;;1568:4;1439:186;;;;;;1596:7;1439:186;;;;;1408:217;;1661:4;1644:21;;:8;:15;1653:5;1644:15;;;;;;;;;;;;;;;;;;;;;;;;;:21;;;1636:30;;;;;;1696:9;1677;:16;1687:5;1677:16;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:510;;;;;;;:::o;13044:96:4:-;13101:32;13107:16;13115:7;13107;:16::i;:::-;13125:7;13101:5;:32::i;:::-;13044:96;:::o;715:120:9:-;794:7;;;;;;;;;;;780:21;;:10;:21;;;772:30;;;;;;824:3;813:8;;:14;;;;;;;;;;;;;;;;;;715:120;:::o;4719:290:4:-;4833:12;:10;:12::i;:::-;4821:24;;:8;:24;;;;4813:62;;;;;;;;;;;;;;;;;;;;;;4931:8;4886:18;:32;4905:12;:10;:12::i;:::-;4886:32;;;;;;;;;;;;;;;:42;4919:8;4886:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4983:8;4954:48;;4969:12;:10;:12::i;:::-;4954:48;;;4993:8;4954:48;;;;;;;;;;;;;;;4719:290;;:::o;10581:106::-;10654:26;10664:2;10668:7;10654:26;;;;;;;;;;;;:9;:26::i;:::-;10581:106;;:::o;7747:286::-;7878:41;7897:12;:10;:12::i;:::-;7911:7;7878:18;:41::i;:::-;7870:103;;;;;;;;;;;;;;;;;;;;;;7983:43;8001:4;8007:2;8011:7;8020:5;7983:17;:43::i;:::-;7747:286;;;;:::o;910:248:9:-;1003:10;992:21;;:7;;;;;;;;;;;:21;;;984:30;;;;;;1046:4;1025:8;:18;1034:8;1025:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1068:8;;;;;;;;;;;1061:24;;;1086:7;1061:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1061:33:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1061:33:9;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1061:33:9;;;;;;;;;;1112:8;;;;;;;;;;;1105:26;;;1132:8;1142:7;1105:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1105:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1105:45:9;;;;910:248;;:::o;1755:209::-;1876:5;1862:19;;:10;:19;;;1854:28;;;;;;1911:2;1901:5;:9;;;:12;1893:21;;;;;;1932:8;;;;;;;;;;;1925:22;;;1948:7;1925:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1925:31:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1925:31:9;;;;1755:209;;;:::o;5331:154:4:-;5420:4;5443:18;:25;5462:5;5443:25;;;;;;;;;;;;;;;:35;5469:8;5443:35;;;;;;;;;;;;;;;;;;;;;;;;;5436:42;;5331:154;;;;:::o;9210:152::-;9267:4;9283:13;9299:11;:20;9311:7;9299:20;;;;;;;;;;;;;;;;;;;;;9283:36;;9353:1;9336:19;;:5;:19;;;;9329:26;;;9210:152;;;:::o;735:104:1:-;788:15;822:10;815:17;;735:104;:::o;15759:155:4:-;15851:2;15824:15;:24;15840:7;15824:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15899:7;15895:2;15868:39;;15877:16;15885:7;15877;:16::i;:::-;15868:39;;;;;;;;;;;;15759:155;;:::o;9723:329::-;9808:4;9832:16;9840:7;9832;:16::i;:::-;9824:73;;;;;;;;;;;;;;;;;;;;;;9907:13;9923:16;9931:7;9923;:16::i;:::-;9907:32;;9968:5;9957:16;;:7;:16;;;:51;;;;10001:7;9977:31;;:20;9989:7;9977:11;:20::i;:::-;:31;;;9957:51;:87;;;;10012:32;10029:5;10036:7;10012:16;:32::i;:::-;9957:87;9949:96;;;9723:329;;;;:::o;13517:538::-;13638:4;13618:24;;:16;13626:7;13618;:16::i;:::-;:24;;;13610:78;;;;;;;;;;;;;;;;;;;;;;13720:1;13706:16;;:2;:16;;;;13698:65;;;;;;;;;;;;;;;;;;;;;;13774:39;13795:4;13801:2;13805:7;13774:20;:39::i;:::-;13851:29;13868:1;13872:7;13851:8;:29::i;:::-;13891:35;:17;:23;13909:4;13891:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13936:33;:17;:21;13954:2;13936:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14003:2;13980:11;:20;13992:7;13980:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14040:7;14036:2;14021:27;;14030:4;14021:27;;;;;;;;;;;;13517:538;;;:::o;1059:112:2:-;1124:7;1150;:14;;;1143:21;;1059:112;;;:::o;12439:424:4:-;12541:5;12521:25;;:16;12529:7;12521;:16::i;:::-;:25;;;12513:75;;;;;;;;;;;;;;;;;;;;;;12599:48;12620:5;12635:1;12639:7;12599:20;:48::i;:::-;12685:29;12702:1;12706:7;12685:8;:29::i;:::-;12725:36;:17;:24;12743:5;12725:24;;;;;;;;;;;;;;;:34;:36::i;:::-;12802:1;12771:11;:20;12783:7;12771:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;12848:7;12844:1;12820:36;;12829:5;12820:36;;;;;;;;;;;;12439:424;;:::o;11288:247::-;11383:18;11389:2;11393:7;11383:5;:18::i;:::-;11419:54;11450:1;11454:2;11458:7;11467:5;11419:22;:54::i;:::-;11411:117;;;;;;;;;;;;;;;;;;;;;;11288:247;;;:::o;8738:277::-;8855:32;8869:4;8875:2;8879:7;8855:13;:32::i;:::-;8905:48;8928:4;8934:2;8938:7;8947:5;8905:22;:48::i;:::-;8897:111;;;;;;;;;;;;;;;;;;;;;;8738:277;;;;:::o;16446:93::-;;;;:::o;1361:108:2:-;1441:21;1460:1;1441:7;:14;;;:18;;:21;;;;:::i;:::-;1424:7;:14;;:38;;;;1361:108;:::o;1177:178::-;1347:1;1329:7;:14;;;:19;;;;;;;;;;;1177:178;:::o;11780:391:4:-;11873:1;11859:16;;:2;:16;;;;11851:61;;;;;;;;;;;;;;;;;;;;;;11931:16;11939:7;11931;:16::i;:::-;11930:17;11922:58;;;;;;;;;;;;;;;;;;;;;;11991:45;12020:1;12024:2;12028:7;11991:20;:45::i;:::-;12070:2;12047:11;:20;12059:7;12047:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12082:33;:17;:21;12100:2;12082:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12156:7;12152:2;12131:33;;12148:1;12131:33;;;;;;;;;;;;11780:391;;:::o;14694:1059::-;14823:4;14848:15;:2;:13;;;:15::i;:::-;14843:58;;14886:4;14879:11;;;;14843:58;14970:12;14984:23;15011:2;:7;;15071:2;15055:36;;;:45;;;;15114:12;:10;:12::i;:::-;15140:4;15158:7;15179:5;15019:175;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15019:175:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15019:175:4;15011:184;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;14969:226:4;;;;15210:7;15205:542;;15257:1;15237:10;:17;:21;15233:376;;;15402:10;15396:17;15462:15;15449:10;15445:2;15441:19;15434:44;15351:145;15534:60;;;;;;;;;;;;;;;;;;;15205:542;15639:13;15666:10;15655:32;;;;;;;;;;;;;;15639:48;;698:10;15719:16;;15709:26;;;:6;:26;;;;15701:35;;;;;14694:1059;;;;;;;:::o;1274:134:10:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;685:610:0:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;1732:187:10:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;268:1701:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;283:124;;360:6;347:20;338:29;;372:30;396:5;372:30;;;332:75;;;;;414:128;;493:6;480:20;471:29;;505:32;531:5;505:32;;;465:77;;;;;549:132;;632:6;626:13;617:22;;644:32;670:5;644:32;;;611:70;;;;;689:440;;790:3;783:4;775:6;771:17;767:27;757:2;;808:1;805;798:12;757:2;845:6;832:20;867:64;882:48;923:6;882:48;;;867:64;;;858:73;;951:6;944:5;937:21;987:4;979:6;975:17;1020:4;1013:5;1009:16;1055:3;1046:6;1041:3;1037:16;1034:25;1031:2;;;1072:1;1069;1062:12;1031:2;1082:41;1116:6;1111:3;1106;1082:41;;;750:379;;;;;;;;1138:434;;1236:3;1229:4;1221:6;1217:17;1213:27;1203:2;;1254:1;1251;1244:12;1203:2;1291:6;1278:20;1313:61;1328:45;1366:6;1328:45;;;1313:61;;;1304:70;;1394:6;1387:5;1380:21;1430:4;1422:6;1418:17;1463:4;1456:5;1452:16;1498:3;1489:6;1484:3;1480:16;1477:25;1474:2;;;1515:1;1512;1505:12;1474:2;1525:41;1559:6;1554:3;1549;1525:41;;;1196:376;;;;;;;;1581:442;;1683:3;1676:4;1668:6;1664:17;1660:27;1650:2;;1701:1;1698;1691:12;1650:2;1738:6;1725:20;1760:65;1775:49;1817:6;1775:49;;;1760:65;;;1751:74;;1845:6;1838:5;1831:21;1881:4;1873:6;1869:17;1914:4;1907:5;1903:16;1949:3;1940:6;1935:3;1931:16;1928:25;1925:2;;;1966:1;1963;1956:12;1925:2;1976:41;2010:6;2005:3;2000;1976:41;;;1643:380;;;;;;;;2068:1007;;2186:4;2174:9;2169:3;2165:19;2161:30;2158:2;;;2204:1;2201;2194:12;2158:2;2222:20;2237:4;2222:20;;;2213:29;;2291:1;2323:49;2368:3;2359:6;2348:9;2344:22;2323:49;;;2316:4;2309:5;2305:16;2298:75;2252:132;2462:2;2451:9;2447:18;2434:32;2486:18;2478:6;2475:30;2472:2;;;2518:1;2515;2508:12;2472:2;2553:55;2604:3;2595:6;2584:9;2580:22;2553:55;;;2546:4;2539:5;2535:16;2528:81;2394:226;2682:2;2715:49;2760:3;2751:6;2740:9;2736:22;2715:49;;;2708:4;2701:5;2697:16;2690:75;2630:146;2830:2;2863:46;2905:3;2896:6;2885:9;2881:22;2863:46;;;2856:4;2849:5;2845:16;2838:72;2786:135;2973:3;3007:46;3049:3;3040:6;3029:9;3025:22;3007:46;;;3000:4;2993:5;2989:16;2982:72;2931:134;2152:923;;;;;3082:130;;3162:6;3149:20;3140:29;;3174:33;3201:5;3174:33;;;3134:78;;;;;3219:241;;3323:2;3311:9;3302:7;3298:23;3294:32;3291:2;;;3339:1;3336;3329:12;3291:2;3374:1;3391:53;3436:7;3427:6;3416:9;3412:22;3391:53;;;3381:63;;3353:97;3285:175;;;;;3467:263;;3582:2;3570:9;3561:7;3557:23;3553:32;3550:2;;;3598:1;3595;3588:12;3550:2;3633:1;3650:64;3706:7;3697:6;3686:9;3682:22;3650:64;;;3640:74;;3612:108;3544:186;;;;;3737:366;;;3858:2;3846:9;3837:7;3833:23;3829:32;3826:2;;;3874:1;3871;3864:12;3826:2;3909:1;3926:53;3971:7;3962:6;3951:9;3947:22;3926:53;;;3916:63;;3888:97;4016:2;4034:53;4079:7;4070:6;4059:9;4055:22;4034:53;;;4024:63;;3995:98;3820:283;;;;;;4110:491;;;;4248:2;4236:9;4227:7;4223:23;4219:32;4216:2;;;4264:1;4261;4254:12;4216:2;4299:1;4316:53;4361:7;4352:6;4341:9;4337:22;4316:53;;;4306:63;;4278:97;4406:2;4424:53;4469:7;4460:6;4449:9;4445:22;4424:53;;;4414:63;;4385:98;4514:2;4532:53;4577:7;4568:6;4557:9;4553:22;4532:53;;;4522:63;;4493:98;4210:391;;;;;;4608:721;;;;;4772:3;4760:9;4751:7;4747:23;4743:33;4740:2;;;4789:1;4786;4779:12;4740:2;4824:1;4841:53;4886:7;4877:6;4866:9;4862:22;4841:53;;;4831:63;;4803:97;4931:2;4949:53;4994:7;4985:6;4974:9;4970:22;4949:53;;;4939:63;;4910:98;5039:2;5057:53;5102:7;5093:6;5082:9;5078:22;5057:53;;;5047:63;;5018:98;5175:2;5164:9;5160:18;5147:32;5199:18;5191:6;5188:30;5185:2;;;5231:1;5228;5221:12;5185:2;5251:62;5305:7;5296:6;5285:9;5281:22;5251:62;;;5241:72;;5126:193;4734:595;;;;;;;;5336:360;;;5454:2;5442:9;5433:7;5429:23;5425:32;5422:2;;;5470:1;5467;5460:12;5422:2;5505:1;5522:53;5567:7;5558:6;5547:9;5543:22;5522:53;;;5512:63;;5484:97;5612:2;5630:50;5672:7;5663:6;5652:9;5648:22;5630:50;;;5620:60;;5591:95;5416:280;;;;;;5703:635;;;;5870:2;5858:9;5849:7;5845:23;5841:32;5838:2;;;5886:1;5883;5876:12;5838:2;5921:1;5938:53;5983:7;5974:6;5963:9;5959:22;5938:53;;;5928:63;;5900:97;6056:2;6045:9;6041:18;6028:32;6080:18;6072:6;6069:30;6066:2;;;6112:1;6109;6102:12;6066:2;6132:82;6206:7;6197:6;6186:9;6182:22;6132:82;;;6122:92;;6007:213;6251:2;6269:53;6314:7;6305:6;6294:9;6290:22;6269:53;;;6259:63;;6230:98;5832:506;;;;;;6345:366;;;6466:2;6454:9;6445:7;6441:23;6437:32;6434:2;;;6482:1;6479;6472:12;6434:2;6517:1;6534:53;6579:7;6570:6;6559:9;6555:22;6534:53;;;6524:63;;6496:97;6624:2;6642:53;6687:7;6678:6;6667:9;6663:22;6642:53;;;6632:63;;6603:98;6428:283;;;;;;6718:963;;;;;;;6911:3;6899:9;6890:7;6886:23;6882:33;6879:2;;;6928:1;6925;6918:12;6879:2;6963:1;6980:53;7025:7;7016:6;7005:9;7001:22;6980:53;;;6970:63;;6942:97;7070:2;7088:53;7133:7;7124:6;7113:9;7109:22;7088:53;;;7078:63;;7049:98;7206:2;7195:9;7191:18;7178:32;7230:18;7222:6;7219:30;7216:2;;;7262:1;7259;7252:12;7216:2;7282:63;7337:7;7328:6;7317:9;7313:22;7282:63;;;7272:73;;7157:194;7382:2;7400:53;7445:7;7436:6;7425:9;7421:22;7400:53;;;7390:63;;7361:98;7490:3;7509:50;7551:7;7542:6;7531:9;7527:22;7509:50;;;7499:60;;7469:96;7596:3;7615:50;7657:7;7648:6;7637:9;7633:22;7615:50;;;7605:60;;7575:96;6873:808;;;;;;;;;7688:239;;7791:2;7779:9;7770:7;7766:23;7762:32;7759:2;;;7807:1;7804;7797:12;7759:2;7842:1;7859:52;7903:7;7894:6;7883:9;7879:22;7859:52;;;7849:62;;7821:96;7753:174;;;;;7934:261;;8048:2;8036:9;8027:7;8023:23;8019:32;8016:2;;;8064:1;8061;8054:12;8016:2;8099:1;8116:63;8171:7;8162:6;8151:9;8147:22;8116:63;;;8106:73;;8078:107;8010:185;;;;;8202:241;;8306:2;8294:9;8285:7;8281:23;8277:32;8274:2;;;8322:1;8319;8312:12;8274:2;8357:1;8374:53;8419:7;8410:6;8399:9;8395:22;8374:53;;;8364:63;;8336:97;8268:175;;;;;8450:137;8549:32;8575:5;8549:32;;;8544:3;8537:45;8531:56;;;8594:113;8677:24;8695:5;8677:24;;;8672:3;8665:37;8659:48;;;8714:104;8791:21;8806:5;8791:21;;;8786:3;8779:34;8773:45;;;8825:343;;8935:38;8967:5;8935:38;;;8985:70;9048:6;9043:3;8985:70;;;8978:77;;9060:52;9105:6;9100:3;9093:4;9086:5;9082:16;9060:52;;;9133:29;9155:6;9133:29;;;9128:3;9124:39;9117:46;;8915:253;;;;;;9175:356;;9303:38;9335:5;9303:38;;;9353:88;9434:6;9429:3;9353:88;;;9346:95;;9446:52;9491:6;9486:3;9479:4;9472:5;9468:16;9446:52;;;9519:6;9514:3;9510:16;9503:23;;9283:248;;;;;;9538:347;;9650:39;9683:5;9650:39;;;9701:71;9765:6;9760:3;9701:71;;;9694:78;;9777:52;9822:6;9817:3;9810:4;9803:5;9799:16;9777:52;;;9850:29;9872:6;9850:29;;;9845:3;9841:39;9834:46;;9630:255;;;;;;9893:387;;10053:67;10117:2;10112:3;10053:67;;;10046:74;;10153:34;10149:1;10144:3;10140:11;10133:55;10222:20;10217:2;10212:3;10208:12;10201:42;10271:2;10266:3;10262:12;10255:19;;10039:241;;;;10289:328;;10449:67;10513:2;10508:3;10449:67;;;10442:74;;10549:30;10545:1;10540:3;10536:11;10529:51;10608:2;10603:3;10599:12;10592:19;;10435:182;;;;10626:373;;10786:67;10850:2;10845:3;10786:67;;;10779:74;;10886:34;10882:1;10877:3;10873:11;10866:55;10955:6;10950:2;10945:3;10941:12;10934:28;10990:2;10985:3;10981:12;10974:19;;10772:227;;;;11008:325;;11168:67;11232:2;11227:3;11168:67;;;11161:74;;11268:27;11264:1;11259:3;11255:11;11248:48;11324:2;11319:3;11315:12;11308:19;;11154:179;;;;11342:381;;11502:67;11566:2;11561:3;11502:67;;;11495:74;;11602:34;11598:1;11593:3;11589:11;11582:55;11671:14;11666:2;11661:3;11657:12;11650:36;11714:2;11709:3;11705:12;11698:19;;11488:235;;;;11732:393;;11892:67;11956:2;11951:3;11892:67;;;11885:74;;11992:34;11988:1;11983:3;11979:11;11972:55;12061:26;12056:2;12051:3;12047:12;12040:48;12116:2;12111:3;12107:12;12100:19;;11878:247;;;;12134:379;;12294:67;12358:2;12353:3;12294:67;;;12287:74;;12394:34;12390:1;12385:3;12381:11;12374:55;12463:12;12458:2;12453:3;12449:12;12442:34;12504:2;12499:3;12495:12;12488:19;;12280:233;;;;12522:378;;12682:67;12746:2;12741:3;12682:67;;;12675:74;;12782:34;12778:1;12773:3;12769:11;12762:55;12851:11;12846:2;12841:3;12837:12;12830:33;12891:2;12886:3;12882:12;12875:19;;12668:232;;;;12909:332;;13069:67;13133:2;13128:3;13069:67;;;13062:74;;13169:34;13165:1;13160:3;13156:11;13149:55;13232:2;13227:3;13223:12;13216:19;;13055:186;;;;13250:381;;13410:67;13474:2;13469:3;13410:67;;;13403:74;;13510:34;13506:1;13501:3;13497:11;13490:55;13579:14;13574:2;13569:3;13565:12;13558:36;13622:2;13617:3;13613:12;13606:19;;13396:235;;;;13640:378;;13800:67;13864:2;13859:3;13800:67;;;13793:74;;13900:34;13896:1;13891:3;13887:11;13880:55;13969:11;13964:2;13959:3;13955:12;13948:33;14009:2;14004:3;14000:12;13993:19;;13786:232;;;;14027:370;;14187:67;14251:2;14246:3;14187:67;;;14180:74;;14287:34;14283:1;14278:3;14274:11;14267:55;14356:3;14351:2;14346:3;14342:12;14335:25;14388:2;14383:3;14379:12;14372:19;;14173:224;;;;14406:386;;14566:67;14630:2;14625:3;14566:67;;;14559:74;;14666:34;14662:1;14657:3;14653:11;14646:55;14735:19;14730:2;14725:3;14721:12;14714:41;14783:2;14778:3;14774:12;14767:19;;14552:240;;;;14801:374;;14961:67;15025:2;15020:3;14961:67;;;14954:74;;15061:34;15057:1;15052:3;15048:11;15041:55;15130:7;15125:2;15120:3;15116:12;15109:29;15166:2;15161:3;15157:12;15150:19;;14947:228;;;;15183:113;15266:24;15284:5;15266:24;;;15261:3;15254:37;15248:48;;;15303:262;;15447:93;15536:3;15527:6;15447:93;;;15440:100;;15557:3;15550:10;;15428:137;;;;;15572:213;;15690:2;15679:9;15675:18;15667:26;;15704:71;15772:1;15761:9;15757:17;15748:6;15704:71;;;15661:124;;;;;15792:663;;16028:3;16017:9;16013:19;16005:27;;16043:87;16127:1;16116:9;16112:17;16103:6;16043:87;;;16141:72;16209:2;16198:9;16194:18;16185:6;16141:72;;;16224;16292:2;16281:9;16277:18;16268:6;16224:72;;;16344:9;16338:4;16334:20;16329:2;16318:9;16314:18;16307:48;16369:76;16440:4;16431:6;16369:76;;;16361:84;;15999:456;;;;;;;;16462:324;;16608:2;16597:9;16593:18;16585:26;;16622:71;16690:1;16679:9;16675:17;16666:6;16622:71;;;16704:72;16772:2;16761:9;16757:18;16748:6;16704:72;;;16579:207;;;;;;16793:201;;16905:2;16894:9;16890:18;16882:26;;16919:65;16981:1;16970:9;16966:17;16957:6;16919:65;;;16876:118;;;;;17001:301;;17139:2;17128:9;17124:18;17116:26;;17189:9;17183:4;17179:20;17175:1;17164:9;17160:17;17153:47;17214:78;17287:4;17278:6;17214:78;;;17206:86;;17110:192;;;;;17309:407;;17500:2;17489:9;17485:18;17477:26;;17550:9;17544:4;17540:20;17536:1;17525:9;17521:17;17514:47;17575:131;17701:4;17575:131;;;17567:139;;17471:245;;;;17723:407;;17914:2;17903:9;17899:18;17891:26;;17964:9;17958:4;17954:20;17950:1;17939:9;17935:17;17928:47;17989:131;18115:4;17989:131;;;17981:139;;17885:245;;;;18137:407;;18328:2;18317:9;18313:18;18305:26;;18378:9;18372:4;18368:20;18364:1;18353:9;18349:17;18342:47;18403:131;18529:4;18403:131;;;18395:139;;18299:245;;;;18551:407;;18742:2;18731:9;18727:18;18719:26;;18792:9;18786:4;18782:20;18778:1;18767:9;18763:17;18756:47;18817:131;18943:4;18817:131;;;18809:139;;18713:245;;;;18965:407;;19156:2;19145:9;19141:18;19133:26;;19206:9;19200:4;19196:20;19192:1;19181:9;19177:17;19170:47;19231:131;19357:4;19231:131;;;19223:139;;19127:245;;;;19379:407;;19570:2;19559:9;19555:18;19547:26;;19620:9;19614:4;19610:20;19606:1;19595:9;19591:17;19584:47;19645:131;19771:4;19645:131;;;19637:139;;19541:245;;;;19793:407;;19984:2;19973:9;19969:18;19961:26;;20034:9;20028:4;20024:20;20020:1;20009:9;20005:17;19998:47;20059:131;20185:4;20059:131;;;20051:139;;19955:245;;;;20207:407;;20398:2;20387:9;20383:18;20375:26;;20448:9;20442:4;20438:20;20434:1;20423:9;20419:17;20412:47;20473:131;20599:4;20473:131;;;20465:139;;20369:245;;;;20621:407;;20812:2;20801:9;20797:18;20789:26;;20862:9;20856:4;20852:20;20848:1;20837:9;20833:17;20826:47;20887:131;21013:4;20887:131;;;20879:139;;20783:245;;;;21035:407;;21226:2;21215:9;21211:18;21203:26;;21276:9;21270:4;21266:20;21262:1;21251:9;21247:17;21240:47;21301:131;21427:4;21301:131;;;21293:139;;21197:245;;;;21449:407;;21640:2;21629:9;21625:18;21617:26;;21690:9;21684:4;21680:20;21676:1;21665:9;21661:17;21654:47;21715:131;21841:4;21715:131;;;21707:139;;21611:245;;;;21863:407;;22054:2;22043:9;22039:18;22031:26;;22104:9;22098:4;22094:20;22090:1;22079:9;22075:17;22068:47;22129:131;22255:4;22129:131;;;22121:139;;22025:245;;;;22277:407;;22468:2;22457:9;22453:18;22445:26;;22518:9;22512:4;22508:20;22504:1;22493:9;22489:17;22482:47;22543:131;22669:4;22543:131;;;22535:139;;22439:245;;;;22691:407;;22882:2;22871:9;22867:18;22859:26;;22932:9;22926:4;22922:20;22918:1;22907:9;22903:17;22896:47;22957:131;23083:4;22957:131;;;22949:139;;22853:245;;;;23105:213;;23223:2;23212:9;23208:18;23200:26;;23237:71;23305:1;23294:9;23290:17;23281:6;23237:71;;;23194:124;;;;;23325:256;;23387:2;23381:9;23371:19;;23425:4;23417:6;23413:17;23524:6;23512:10;23509:22;23488:18;23476:10;23473:34;23470:62;23467:2;;;23545:1;23542;23535:12;23467:2;23565:10;23561:2;23554:22;23365:216;;;;;23588:321;;23731:18;23723:6;23720:30;23717:2;;;23763:1;23760;23753:12;23717:2;23830:4;23826:9;23819:4;23811:6;23807:17;23803:33;23795:41;;23894:4;23888;23884:15;23876:23;;23654:255;;;;23916:318;;24056:18;24048:6;24045:30;24042:2;;;24088:1;24085;24078:12;24042:2;24155:4;24151:9;24144:4;24136:6;24132:17;24128:33;24120:41;;24219:4;24213;24209:15;24201:23;;23979:255;;;;24241:322;;24385:18;24377:6;24374:30;24371:2;;;24417:1;24414;24407:12;24371:2;24484:4;24480:9;24473:4;24465:6;24461:17;24457:33;24449:41;;24548:4;24542;24538:15;24530:23;;24308:255;;;;24570:121;;24663:5;24657:12;24647:22;;24628:63;;;;24698:122;;24792:5;24786:12;24776:22;;24757:63;;;;24828:162;;24942:6;24937:3;24930:19;24979:4;24974:3;24970:14;24955:29;;24923:67;;;;;24999:144;;25134:3;25119:18;;25112:31;;;;;25152:163;;25267:6;25262:3;25255:19;25304:4;25299:3;25295:14;25280:29;;25248:67;;;;;25323:91;;25385:24;25403:5;25385:24;;;25374:35;;25368:46;;;;25421:99;;25491:24;25509:5;25491:24;;;25480:35;;25474:46;;;;25527:85;;25600:5;25593:13;25586:21;25575:32;;25569:43;;;;25619:144;;25691:66;25684:5;25680:78;25669:89;;25663:100;;;;25770:121;;25843:42;25836:5;25832:54;25821:65;;25815:76;;;;25898:72;;25960:5;25949:16;;25943:27;;;;25978:145;26059:6;26054:3;26049;26036:30;26115:1;26106:6;26101:3;26097:16;26090:27;26029:94;;;;26132:268;26197:1;26204:101;26218:6;26215:1;26212:13;26204:101;;;26294:1;26289:3;26285:11;26279:18;26275:1;26270:3;26266:11;26259:39;26240:2;26237:1;26233:10;26228:15;;26204:101;;;26320:6;26317:1;26314:13;26311:2;;;26385:1;26376:6;26371:3;26367:16;26360:27;26311:2;26181:219;;;;;26408:97;;26496:2;26492:7;26487:2;26480:5;26476:14;26472:28;26462:38;;26456:49;;;;26513:117;26582:24;26600:5;26582:24;;;26575:5;26572:35;26562:2;;26621:1;26618;26611:12;26562:2;26556:74;;26637:111;26703:21;26718:5;26703:21;;;26696:5;26693:32;26683:2;;26739:1;26736;26729:12;26683:2;26677:71;;26755:115;26823:23;26840:5;26823:23;;;26816:5;26813:34;26803:2;;26861:1;26858;26851:12;26803:2;26797:73;;26877:117;26946:24;26964:5;26946:24;;;26939:5;26936:35;26926:2;;26985:1;26982;26975:12;26926:2;26920:74;",
  "source": "pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\nimport \"./Context.sol\";\r\nimport \"./IERC721.sol\";\r\nimport \"./IERC721Receiver.sol\";\r\nimport \"./SafeMath.sol\";\r\nimport \"./Address.sol\";\r\nimport \"./Counters.sol\";\r\nimport \"./ERC165.sol\";\r\nimport \"./ERC721.sol\";\r\ncontract OurContract is ERC721\r\n{\r\n    struct waterdoggos\r\n    {\r\n        uint age;\r\n        string name;\r\n        uint under_water_time;\r\n        bool friendly;\r\n        bool gender;\r\n    }\r\n    address Bigboss;\r\n    address ERC721ad;\r\n    //Mapping form owner address to bool \r\n    mapping(address => bool) private _Breeder;\r\n    mapping(address => waterdoggos) Yourdoggo;\r\n    constructor () public {\r\n        Bigboss = msg.sender;\r\n    }\r\n    function setERC721ad(address erc) public\r\n    {\r\n        require(msg.sender == Bigboss);\r\n        ERC721ad = erc;\r\n    }\r\n    //We'll put most of our work here in this part of the contract \r\n    function registerBreeder(address newOwner, uint tokenID) public{\r\n        require(Bigboss == msg.sender);\r\n        _Breeder[newOwner] = true;\r\n        ERC721(ERC721ad).ownerOf(tokenID);\r\n        ERC721(ERC721ad)._safeMint(newOwner, tokenID);\r\n    }\r\n\r\n    //Let's create our animal type \r\n    function declareAnimal (address owner, uint _age, string memory _name, uint _time,bool cool, bool _gender) public{\r\n        require(Bigboss==msg.sender);\r\n        //waterdoggos memory age = _age;\r\n        waterdoggos memory yourdoggo = waterdoggos({\r\n            age : _age,\r\n            name : _name,\r\n            under_water_time : _time,\r\n            friendly : cool,\r\n            gender : _gender\r\n        }\r\n        );\r\n        require(_Breeder[owner]==true);\r\n        Yourdoggo[owner] = yourdoggo;\r\n    }\r\n\r\n    //What if one of them died ?\r\n    function deadAnimal(address owner, waterdoggos memory doggo, uint tokenID) public \r\n    {\r\n        require(msg.sender == owner);\r\n        require(doggo.age>15);\r\n        ERC721(ERC721ad)._burn(tokenID);\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\ronan\\Documents\\ing4\\semestre 2\\Blockchaineprogra\\TD6_Block_Pro\\contracts\\OurContract.sol",
  "ast": {
    "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/OurContract.sol",
    "exportedSymbols": {
      "OurContract": [
        1273
      ]
    },
    "id": 1274,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "id": 1099,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 1100,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 105,
        "src": "60:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1101,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1044,
        "src": "85:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1102,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1060,
        "src": "110:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1103,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1461,
        "src": "143:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Address.sol",
        "file": "./Address.sol",
        "id": 1104,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 78,
        "src": "169:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Counters.sol",
        "file": "./Counters.sol",
        "id": 1105,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 154,
        "src": "194:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 1106,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 207,
        "src": "220:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1107,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 931,
        "src": "244:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1108,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 930,
              "src": "292:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$930",
                "typeString": "contract ERC721"
              }
            },
            "id": 1109,
            "nodeType": "InheritanceSpecifier",
            "src": "292:6:9"
          }
        ],
        "contractDependencies": [
          104,
          206,
          930,
          940,
          1043
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1273,
        "linearizedBaseContracts": [
          1273,
          930,
          1043,
          206,
          940,
          104
        ],
        "name": "OurContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "OurContract.waterdoggos",
            "id": 1120,
            "members": [
              {
                "constant": false,
                "id": 1111,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "342:8:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1110,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1113,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "361:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1115,
                "name": "under_water_time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "383:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1114,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "friendly",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "415:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1116,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "gender",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "439:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1118,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "waterdoggos",
            "nodeType": "StructDefinition",
            "scope": 1273,
            "src": "307:151:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1122,
            "name": "Bigboss",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "464:15:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1124,
            "name": "ERC721ad",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "486:16:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1123,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "_Breeder",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "552:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1127,
              "keyType": {
                "id": 1125,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "560:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "552:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1126,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "571:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1132,
            "name": "Yourdoggo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "600:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
              "typeString": "mapping(address => struct OurContract.waterdoggos)"
            },
            "typeName": {
              "id": 1131,
              "keyType": {
                "id": 1129,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "600:31:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
                "typeString": "mapping(address => struct OurContract.waterdoggos)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1130,
                "name": "waterdoggos",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1120,
                "src": "619:11:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                  "typeString": "struct OurContract.waterdoggos"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "670:39:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1135,
                      "name": "Bigboss",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "681:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1136,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "691:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "691:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "681:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 1141,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:9"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:9"
            },
            "scope": 1273,
            "src": "648:61:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "761:74:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "780:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "780:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1149,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "794:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "780:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "772:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "772:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1153,
                      "name": "ERC721ad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "813:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1154,
                      "name": "erc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "824:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "813:14:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9d903059",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setERC721ad",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "name": "erc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1158,
                  "src": "736:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "735:13:9"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:9"
            },
            "scope": 1273,
            "src": "715:120:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "973:185:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1166,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "992:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1003:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1003:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "992:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "984:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "984:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "984:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1172,
                        "name": "_Breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1025:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1034:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1046:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1025:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1182,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "1086:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1068:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1178,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1061:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1061:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 314,
                      "src": "1061:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1189,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1132:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1190,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "1142:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1186,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1112:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1185,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1105:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "1105:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:45:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ceb97d52",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerBreeder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1194,
                  "src": "935:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1194,
                  "src": "953:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "934:32:9"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:9"
            },
            "scope": 1273,
            "src": "910:248:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "1316:397:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1210,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "1335:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1211,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1344:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1344:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1335:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1327:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:28:9"
                },
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "name": "yourdoggo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1240,
                      "src": "1408:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                        "typeString": "struct OurContract.waterdoggos"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1216,
                        "name": "waterdoggos",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1120,
                        "src": "1408:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                          "typeString": "struct OurContract.waterdoggos"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1225,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1219,
                        "name": "_age",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "1472:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1220,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "1498:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1221,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "1537:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1222,
                        "name": "cool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "1568:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "_gender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "1596:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1218,
                      "name": "waterdoggos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "1439:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_waterdoggos_$1120_storage_ptr_$",
                        "typeString": "type(struct OurContract.waterdoggos storage pointer)"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "age",
                      "name",
                      "under_water_time",
                      "friendly",
                      "gender"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1439:186:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_memory",
                      "typeString": "struct OurContract.waterdoggos memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1408:217:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1227,
                            "name": "_Breeder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "1644:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1228,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1653:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1644:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1644:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1636:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1234,
                        "name": "Yourdoggo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "1677:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
                          "typeString": "mapping(address => struct OurContract.waterdoggos storage ref)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1235,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "1687:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1677:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_storage",
                        "typeString": "struct OurContract.waterdoggos storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "yourdoggo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "1696:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                        "typeString": "struct OurContract.waterdoggos memory"
                      }
                    },
                    "src": "1677:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_storage",
                      "typeString": "struct OurContract.waterdoggos storage ref"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:28:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8e9c6ce4",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1227:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "name": "_age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1242:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1253:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1274:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "name": "cool",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1285:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "name": "_gender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1296:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1226:83:9"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:9"
            },
            "scope": 1273,
            "src": "1203:510:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "1843:121:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1862:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1862:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1253,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1243,
                          "src": "1876:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1862:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1854:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1258,
                            "name": "doggo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "1901:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                              "typeString": "struct OurContract.waterdoggos memory"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "age",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1111,
                          "src": "1901:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1911:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "1901:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1893:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1268,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "1948:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1265,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1932:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1264,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1925:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1925:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 755,
                      "src": "1925:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:31:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d3f16654",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deadAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1775:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1245,
                  "name": "doggo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1790:24:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                    "typeString": "struct OurContract.waterdoggos"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1244,
                    "name": "waterdoggos",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1120,
                    "src": "1790:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                      "typeString": "struct OurContract.waterdoggos"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1247,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1816:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1774:55:9"
            },
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:9"
            },
            "scope": 1273,
            "src": "1755:209:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1274,
        "src": "268:1701:9"
      }
    ],
    "src": "0:1969:9"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/OurContract.sol",
    "exportedSymbols": {
      "OurContract": [
        1273
      ]
    },
    "id": 1274,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "id": 1099,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:9"
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 1100,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 105,
        "src": "60:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1101,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1044,
        "src": "85:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1102,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1060,
        "src": "110:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1103,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 1461,
        "src": "143:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Address.sol",
        "file": "./Address.sol",
        "id": 1104,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 78,
        "src": "169:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/Counters.sol",
        "file": "./Counters.sol",
        "id": 1105,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 154,
        "src": "194:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 1106,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 207,
        "src": "220:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ronan/Documents/ing4/semestre 2/Blockchaineprogra/TD6_Block_Pro/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1107,
        "nodeType": "ImportDirective",
        "scope": 1274,
        "sourceUnit": 931,
        "src": "244:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1108,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 930,
              "src": "292:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$930",
                "typeString": "contract ERC721"
              }
            },
            "id": 1109,
            "nodeType": "InheritanceSpecifier",
            "src": "292:6:9"
          }
        ],
        "contractDependencies": [
          104,
          206,
          930,
          940,
          1043
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1273,
        "linearizedBaseContracts": [
          1273,
          930,
          1043,
          206,
          940,
          104
        ],
        "name": "OurContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "OurContract.waterdoggos",
            "id": 1120,
            "members": [
              {
                "constant": false,
                "id": 1111,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "342:8:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1110,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1113,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "361:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1115,
                "name": "under_water_time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "383:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1114,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1117,
                "name": "friendly",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "415:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1116,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1119,
                "name": "gender",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1120,
                "src": "439:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1118,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "waterdoggos",
            "nodeType": "StructDefinition",
            "scope": 1273,
            "src": "307:151:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1122,
            "name": "Bigboss",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "464:15:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1124,
            "name": "ERC721ad",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "486:16:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1123,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "_Breeder",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "552:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1127,
              "keyType": {
                "id": 1125,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "560:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "552:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1126,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "571:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1132,
            "name": "Yourdoggo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1273,
            "src": "600:41:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
              "typeString": "mapping(address => struct OurContract.waterdoggos)"
            },
            "typeName": {
              "id": 1131,
              "keyType": {
                "id": 1129,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "600:31:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
                "typeString": "mapping(address => struct OurContract.waterdoggos)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1130,
                "name": "waterdoggos",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1120,
                "src": "619:11:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                  "typeString": "struct OurContract.waterdoggos"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "670:39:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1135,
                      "name": "Bigboss",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "681:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1136,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "691:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "691:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "681:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:9"
                }
              ]
            },
            "documentation": null,
            "id": 1141,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:9"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:9"
            },
            "scope": 1273,
            "src": "648:61:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1157,
              "nodeType": "Block",
              "src": "761:74:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "780:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "780:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1149,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "794:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "780:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "772:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "772:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1153,
                      "name": "ERC721ad",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "813:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1154,
                      "name": "erc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "824:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "813:14:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9d903059",
            "id": 1158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setERC721ad",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "name": "erc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1158,
                  "src": "736:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "735:13:9"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:9"
            },
            "scope": 1273,
            "src": "715:120:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "973:185:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1166,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "992:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1003:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1003:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "992:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "984:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "984:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "984:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1172,
                        "name": "_Breeder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "1025:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1034:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1025:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1046:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1025:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1182,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "1086:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1179,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1068:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1178,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1061:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1061:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 314,
                      "src": "1061:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1189,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1132:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1190,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "1142:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1186,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1112:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1185,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1105:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "1105:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:45:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ceb97d52",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerBreeder",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1194,
                  "src": "935:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1194,
                  "src": "953:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "934:32:9"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:9"
            },
            "scope": 1273,
            "src": "910:248:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "1316:397:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1210,
                          "name": "Bigboss",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "1335:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1211,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1344:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1344:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1335:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1327:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:28:9"
                },
                {
                  "assignments": [
                    1217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1217,
                      "name": "yourdoggo",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1240,
                      "src": "1408:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                        "typeString": "struct OurContract.waterdoggos"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1216,
                        "name": "waterdoggos",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1120,
                        "src": "1408:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                          "typeString": "struct OurContract.waterdoggos"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1225,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1219,
                        "name": "_age",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "1472:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1220,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "1498:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1221,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "1537:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1222,
                        "name": "cool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "1568:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "_gender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "1596:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1218,
                      "name": "waterdoggos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "1439:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_waterdoggos_$1120_storage_ptr_$",
                        "typeString": "type(struct OurContract.waterdoggos storage pointer)"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "age",
                      "name",
                      "under_water_time",
                      "friendly",
                      "gender"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1439:186:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_memory",
                      "typeString": "struct OurContract.waterdoggos memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1408:217:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1227,
                            "name": "_Breeder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "1644:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1229,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1228,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1653:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1644:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1644:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1636:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1234,
                        "name": "Yourdoggo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "1677:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_waterdoggos_$1120_storage_$",
                          "typeString": "mapping(address => struct OurContract.waterdoggos storage ref)"
                        }
                      },
                      "id": 1236,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1235,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "1687:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1677:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_storage",
                        "typeString": "struct OurContract.waterdoggos storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "yourdoggo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "1696:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                        "typeString": "struct OurContract.waterdoggos memory"
                      }
                    },
                    "src": "1677:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_storage",
                      "typeString": "struct OurContract.waterdoggos storage ref"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:28:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8e9c6ce4",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declareAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1227:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "name": "_age",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1242:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1253:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1274:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "name": "cool",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1285:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "name": "_gender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1296:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1226:83:9"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:9"
            },
            "scope": 1273,
            "src": "1203:510:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "1843:121:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1862:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1862:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1253,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1243,
                          "src": "1876:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1862:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1854:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1258,
                            "name": "doggo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1245,
                            "src": "1901:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                              "typeString": "struct OurContract.waterdoggos memory"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "age",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1111,
                          "src": "1901:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1911:2:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "1901:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1478,
                        1479
                      ],
                      "referencedDeclaration": 1478,
                      "src": "1893:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:21:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1268,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "1948:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1265,
                            "name": "ERC721ad",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "1932:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1264,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1925:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$930_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1925:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$930",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 755,
                      "src": "1925:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:31:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d3f16654",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deadAnimal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1775:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1245,
                  "name": "doggo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1790:24:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_waterdoggos_$1120_memory_ptr",
                    "typeString": "struct OurContract.waterdoggos"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1244,
                    "name": "waterdoggos",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1120,
                    "src": "1790:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_waterdoggos_$1120_storage_ptr",
                      "typeString": "struct OurContract.waterdoggos"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1247,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1272,
                  "src": "1816:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1774:55:9"
            },
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:9"
            },
            "scope": 1273,
            "src": "1755:209:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1274,
        "src": "268:1701:9"
      }
    ],
    "src": "0:1969:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x70Cb9e64fa5996DB68B8E240e84F216119166E81",
      "transactionHash": "0x2d6b6bd4851920475135f5d375b5150b97ee0303a1024d88ec25ba168678dedf"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-08T21:54:41.256Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "_burn(uint256)": {
        "details": "Internal function to burn a specific token. Reverts if the token does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token being burned"
        }
      },
      "_safeMint(address,uint256)": {
        "details": "Internal function to safely mint a new token. Reverts if the given token ID already exists. If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.",
        "params": {
          "to": "The address that will own the minted token",
          "tokenId": "uint256 ID of the token to be minted"
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}